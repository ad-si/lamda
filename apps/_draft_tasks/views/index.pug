extends ../node_modules/@lamdahq/views/layout

block styles
  link(rel='stylesheet' href=`${baseURL}/styles/index.css`)


block scripts
  script.
    var rawTasks = !{JSON.stringify(tasks)}
    var defaultConfig = !{defaultConfigString}

  //- TODO: Re-enable Vue app
  //- script(src=`${baseURL}/scripts/index.js`)


block content
  //- TODO: Re-enable Vue app
  //- article
  //-   template
  //-     form(action='#' method='post' @submit.prevent='addNewTask()')
  //-       fieldset
  //-         input#newTask(
  //-           v-model='newTaskTitle'
  //-           type='text'
  //-           name='title'
  //-           placeholder='Do this and that'
  //-         )
  //-         input.button(
  //-           type='submit'
  //-           value='Add'
  //-         )

  //-       fieldset
  //-         textarea#newFilter(
  //-           name='newFilter'
  //-           rows=3
  //-           cols=60
  //-         ).
  //-           task => {
  //-             task.creationDate.toDateString() === new Date().toDateString()
  //-           }

  //-         br

  //-         input#addFilterButton.button(
  //-           type='button'
  //-           value='Apply'
  //-         )

  //-         input#addViewButton.button(
  //-           type='button'
  //-           value='Add as new view'
  //-         )

  //-     p {{views.length}} Views:
  //-     ul.views
  //-       li.view(v-for='view in views')
  //-         input.button(
  //-           type='button',
  //-           :value='view.name'
  //-           @click='setCurrentView(view.name)'
  //-         )

  //-     p {{processedTasks.length}} Tasks:
  //-     ul.tasks
  //-       li.task(
  //-         v-for='task in processedTasks',
  //-         :class='{completed: task.isClosed}'
  //-       )
  //-         .positionLeft
  //-           input(type='checkbox' v-model='task.isClosed')
  //-           a(:href='`files${task.id}`') {{task.title}}
  //-           span.tag(
  //-             v-for='tag in task.tags'
  //-           ) {{tag}}

  //-         .positionRight
  //-           span.dates
  //-             span.calendar üìÖ
  //-             span.creationDate(v-if='task.creationDateFormatted')
  //-               | {{task.creationDateFormatted}}
  //-             span.dueDate(v-if='task.dueDateFormatted')
  //-               small= ' due '
  //-               | {{task.dueDateFormatted}}

  //-           button(@click='editFile(task.id)') ‚úç

  if tasks
    article
      form(action='/' method='post')
        fieldset
          input#newTask(
            type='text'
            name='title'
            placeholder='Add a task ‚Ä¶'
          )
          input.button(
            type='submit'
            value='Add'
          )

      ul.tasks
        for task in tasks
          li.task(class=(task.completed ? 'completed' : ''))
            .positionLeft
              input(type='checkbox' checked=task.isClosed)
              a(href=`files/${task.id}`)
                = task.title || '<NO TITLE>'
              if task.tags && task.tags.length > 0
                each tag in task.tags
                  span.tag= tag

            .positionRight
              span.dates
                span.calendar üìÖ
                if task.creationDateFormatted
                  span.creationDate
                    = task.creationDateFormatted
                if task.dueDateFormatted
                  span.dueDate
                    small= ` due ${task.dueDateFormatted}`

  else
    .getting-started
      p
        | You do not have any tasks yet.
        br
        | In order to get started
        | create a tasks directory in your home directory
        | and add a <timestamp>.yaml file for each task.

      p Each yaml file must be structured like this:

      pre: code.
        2015-01-01 12:38:44:
          title: Title of the task
          tags:
            - inbox
            - example

        2015-01-01 13:09:31:
          completed: true

  #modalBackdrop
  #modal
    textarea#viewCode.
      Enter code to filter and sort task array
